//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace wsdev.financeWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FinanceServiceSoap", Namespace="http://www.webserviceX.NET/")]
    public partial class FinanceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoanMonthlyPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoanNumberOfPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LeaseMonthlyPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback APROperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FinanceService() {
            this.Url = global::wsdev.Properties.Settings.Default.wsdev_financeWS_FinanceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoanMonthlyPaymentCompletedEventHandler LoanMonthlyPaymentCompleted;
        
        /// <remarks/>
        public event LoanNumberOfPaymentCompletedEventHandler LoanNumberOfPaymentCompleted;
        
        /// <remarks/>
        public event LeaseMonthlyPaymentCompletedEventHandler LeaseMonthlyPaymentCompleted;
        
        /// <remarks/>
        public event APRCompletedEventHandler APRCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/LoanMonthlyPayment", RequestNamespace="http://www.webserviceX.NET/", ResponseNamespace="http://www.webserviceX.NET/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double LoanMonthlyPayment(double LoanAmount, double InterestRate, double Months) {
            object[] results = this.Invoke("LoanMonthlyPayment", new object[] {
                        LoanAmount,
                        InterestRate,
                        Months});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void LoanMonthlyPaymentAsync(double LoanAmount, double InterestRate, double Months) {
            this.LoanMonthlyPaymentAsync(LoanAmount, InterestRate, Months, null);
        }
        
        /// <remarks/>
        public void LoanMonthlyPaymentAsync(double LoanAmount, double InterestRate, double Months, object userState) {
            if ((this.LoanMonthlyPaymentOperationCompleted == null)) {
                this.LoanMonthlyPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoanMonthlyPaymentOperationCompleted);
            }
            this.InvokeAsync("LoanMonthlyPayment", new object[] {
                        LoanAmount,
                        InterestRate,
                        Months}, this.LoanMonthlyPaymentOperationCompleted, userState);
        }
        
        private void OnLoanMonthlyPaymentOperationCompleted(object arg) {
            if ((this.LoanMonthlyPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoanMonthlyPaymentCompleted(this, new LoanMonthlyPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/LoanNumberOfPayment", RequestNamespace="http://www.webserviceX.NET/", ResponseNamespace="http://www.webserviceX.NET/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double LoanNumberOfPayment(double LoanAmount, double InterestRate, double MonthlyPayment) {
            object[] results = this.Invoke("LoanNumberOfPayment", new object[] {
                        LoanAmount,
                        InterestRate,
                        MonthlyPayment});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void LoanNumberOfPaymentAsync(double LoanAmount, double InterestRate, double MonthlyPayment) {
            this.LoanNumberOfPaymentAsync(LoanAmount, InterestRate, MonthlyPayment, null);
        }
        
        /// <remarks/>
        public void LoanNumberOfPaymentAsync(double LoanAmount, double InterestRate, double MonthlyPayment, object userState) {
            if ((this.LoanNumberOfPaymentOperationCompleted == null)) {
                this.LoanNumberOfPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoanNumberOfPaymentOperationCompleted);
            }
            this.InvokeAsync("LoanNumberOfPayment", new object[] {
                        LoanAmount,
                        InterestRate,
                        MonthlyPayment}, this.LoanNumberOfPaymentOperationCompleted, userState);
        }
        
        private void OnLoanNumberOfPaymentOperationCompleted(object arg) {
            if ((this.LoanNumberOfPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoanNumberOfPaymentCompleted(this, new LoanNumberOfPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/LeaseMonthlyPayment", RequestNamespace="http://www.webserviceX.NET/", ResponseNamespace="http://www.webserviceX.NET/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double LeaseMonthlyPayment(double LoanAmount, double ResidualValue, double InterestRate, double Months) {
            object[] results = this.Invoke("LeaseMonthlyPayment", new object[] {
                        LoanAmount,
                        ResidualValue,
                        InterestRate,
                        Months});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void LeaseMonthlyPaymentAsync(double LoanAmount, double ResidualValue, double InterestRate, double Months) {
            this.LeaseMonthlyPaymentAsync(LoanAmount, ResidualValue, InterestRate, Months, null);
        }
        
        /// <remarks/>
        public void LeaseMonthlyPaymentAsync(double LoanAmount, double ResidualValue, double InterestRate, double Months, object userState) {
            if ((this.LeaseMonthlyPaymentOperationCompleted == null)) {
                this.LeaseMonthlyPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLeaseMonthlyPaymentOperationCompleted);
            }
            this.InvokeAsync("LeaseMonthlyPayment", new object[] {
                        LoanAmount,
                        ResidualValue,
                        InterestRate,
                        Months}, this.LeaseMonthlyPaymentOperationCompleted, userState);
        }
        
        private void OnLeaseMonthlyPaymentOperationCompleted(object arg) {
            if ((this.LeaseMonthlyPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LeaseMonthlyPaymentCompleted(this, new LeaseMonthlyPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/APR", RequestNamespace="http://www.webserviceX.NET/", ResponseNamespace="http://www.webserviceX.NET/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double APR(double LoanAmount, double ExtraCost, double InterestRate, double Months) {
            object[] results = this.Invoke("APR", new object[] {
                        LoanAmount,
                        ExtraCost,
                        InterestRate,
                        Months});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void APRAsync(double LoanAmount, double ExtraCost, double InterestRate, double Months) {
            this.APRAsync(LoanAmount, ExtraCost, InterestRate, Months, null);
        }
        
        /// <remarks/>
        public void APRAsync(double LoanAmount, double ExtraCost, double InterestRate, double Months, object userState) {
            if ((this.APROperationCompleted == null)) {
                this.APROperationCompleted = new System.Threading.SendOrPostCallback(this.OnAPROperationCompleted);
            }
            this.InvokeAsync("APR", new object[] {
                        LoanAmount,
                        ExtraCost,
                        InterestRate,
                        Months}, this.APROperationCompleted, userState);
        }
        
        private void OnAPROperationCompleted(object arg) {
            if ((this.APRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.APRCompleted(this, new APRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void LoanMonthlyPaymentCompletedEventHandler(object sender, LoanMonthlyPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoanMonthlyPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoanMonthlyPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void LoanNumberOfPaymentCompletedEventHandler(object sender, LoanNumberOfPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoanNumberOfPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoanNumberOfPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void LeaseMonthlyPaymentCompletedEventHandler(object sender, LeaseMonthlyPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LeaseMonthlyPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LeaseMonthlyPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void APRCompletedEventHandler(object sender, APRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class APRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal APRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591